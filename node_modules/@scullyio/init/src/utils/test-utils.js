"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const schema_1 = require("@schematics/angular/application/schema");
const workspaceOptions = Object.freeze({
    name: 'workspace',
    newProjectRoot: '',
    version: '^9.0.0-rc.4' // TODO (?) synch with requiredAngularVersionRange value from ../ng-add/version-names.ts
});
const defaultAppOptions = Object.freeze({
    name: 'foo',
    // inlineStyle: false,
    // inlineTemplate: false,
    // routing: false,
    // style: Style.Css,
    // skipTests: false,
    // skipPackageJson: false
    projectRoot: '',
    routing: true
});
function getStyle(key) {
    return Object.values(schema_1.Style).find(s => {
        return s === key;
    });
}
async function setupProject(schematicRunner, options) {
    if (typeof options === 'string') {
        options = { name: options };
    }
    options = options || {};
    if (options.styleFileFormat) {
        options.style = getStyle(options.styleFileFormat);
    }
    delete options.styleFileFormat;
    const appOptions = { ...defaultAppOptions, ...options };
    let tree = await schematicRunner
        .runSchematicAsync('workspace', { ...workspaceOptions })
        .toPromise();
    tree = await schematicRunner
        .runSchematicAsync('application', appOptions, tree)
        .toPromise();
    return tree;
}
exports.setupProject = setupProject;
//# sourceMappingURL=test-utils.js.map