import { JsonParseMode } from '@angular-devkit/core';
import { Rule, Source, Tree } from '@angular-devkit/schematics';
import { SourceFile } from '@schematics/angular/third_party/github.com/Microsoft/TypeScript/lib/typescript';
interface Data {
    name: string;
    type: string;
    slug: string;
    route: string;
    sourceDir?: string;
}
export interface PackageJson {
    dependencies: PackageJsonConfigPart<string>;
    devDependencies: PackageJsonConfigPart<string>;
    scripts?: PackageJsonConfigPart<string>;
}
export interface PackageJsonConfigPart<T> {
    [key: string]: T;
}
export declare function addRouteToScullyConfig(scullyConfigJs: string, data: Data): string;
export declare function addTypescriptFolder(scullyConfigJs: string, data: string): string;
export declare function applyWithOverwrite(source: Source, rules: Rule[]): Rule;
export declare function getPrefix(host: Tree, project?: string, angularjsonPath?: string): any;
export declare function addRouteToModule(host: Tree, options: any): void;
export declare function getSrc(host: Tree, project?: string, angularjsonPath?: string): any;
export declare function getRoot(host: Tree, project?: string, angularjsonPath?: string): any;
export declare function getStyle(host: Tree, project?: string, angularjsonPath?: string): any;
/** Parser of json content
 *  By default allow Json5 syntax, eg comments, trailing commas, ..., ie the same
 *  thing that the Angular json parser itself.
 *
 *  !!! You should always replace JSON.parse by this function !!!
 */
export declare function parseJsonObject(jsonContent: string, mode?: JsonParseMode): {
    [prop: string]: any;
};
/** Parser of json file
 *
 *  By default allow only strict json syntax
 *
 */
export declare const getJsonFile: <T>(tree: import("@angular-devkit/schematics/src/tree/interface").Tree, path: string, mode?: JsonParseMode) => T;
export declare const getFileContents: (tree: import("@angular-devkit/schematics/src/tree/interface").Tree, filePath: string) => string;
/** Parser of package.json file
 *
 *  Allow only strict json content
 *
 */
export declare const getPackageJson: (tree: import("@angular-devkit/schematics/src/tree/interface").Tree, packagejsonPath?: string) => PackageJson;
export declare const overwritePackageJson: (tree: import("@angular-devkit/schematics/src/tree/interface").Tree, content: PackageJson, packagejsonPath?: string) => import("@angular-devkit/schematics/src/tree/interface").Tree;
export declare function getSourceFile(host: Tree, path: string): SourceFile;
export declare const yamlToJson: (host: import("@angular-devkit/schematics/src/tree/interface").Tree, filePath: string) => any;
export declare const jsonToJaml: (metaData: {}) => string;
export declare const toAscii: (src: string) => string;
export declare const getProject: (host: import("@angular-devkit/schematics/src/tree/interface").Tree, project: string, angularjsonPath?: string) => string;
export declare const getScullyConfig: (host: import("@angular-devkit/schematics/src/tree/interface").Tree, project: string) => string;
export declare const checkProjectExist: (host: import("@angular-devkit/schematics/src/tree/interface").Tree, project?: string, angularjsonPath?: string) => boolean;
export declare const removeWrongCharacters: (str: string) => string;
export {};
